{"version":3,"sources":["FuryLazyCall.js"],"names":["CallMethod","object","name","this","fn","CallObject","method","args","arguments","Array","prototype","slice","call","FuryLazyCall","_isLoaded","_methods","_callQueue","exec","apply","replaceWith","newFn","revert","equals","_revertAllMethods","_makeCalls","last","methodName","_this","callObject","_getCallObject","methodCall","push","i","forEach","exports","window"],"mappings":"CAAA,WACA,YAEA,SAAAA,GAAAC,EAAAC,GACAC,KAAAF,OAAAA,EACAE,KAAAD,KAAAA,EACAC,KAAAC,GAAAH,EAAAC,GAeA,QAAAG,GAAAC,EAAAC,GACAJ,KAAAG,OAAAA,EACAH,KAAAK,UAAAC,MAAAC,UAAAC,MAAAC,KAAAL,GASA,QAAAM,KACAV,KAAAW,WAAA,EACAX,KAAAY,YACAZ,KAAAa,cA3BAhB,EAAAU,UAAAO,KAAA,SAAAV,GACAJ,KAAAC,GAAAc,MAAAf,KAAAF,OAAAM,IAEAP,EAAAU,UAAAS,YAAA,SAAAC,GACAjB,KAAAF,OAAAE,KAAAD,MAAAkB,GAEApB,EAAAU,UAAAW,OAAA,WACAlB,KAAAF,OAAAE,KAAAD,MAAAC,KAAAC,IAEAJ,EAAAU,UAAAY,OAAA,SAAAhB,GACA,MAAAH,MAAAF,SAAAK,EAAAL,QAAAE,KAAAD,OAAAI,EAAAJ,MAOAG,EAAAK,UAAAO,KAAA,WACAd,KAAAG,OAAAW,KAAAd,KAAAK,YAeAK,EAAAH,UAAAO,KAAA,WACAd,KAAAW,WAAA,EACAX,KAAAoB,oBACApB,KAAAqB,cAMAX,EAAAH,UAAAe,KAAA,SAAAxB,EAAAyB,GACA,IAAAvB,KAAAW,UAAA,CAKA,GAAAa,GAAAxB,KACAG,EAAA,GAAAN,GAAAC,EAAAyB,EAEApB,GAAAa,YAAA,WACA,GAAAS,GAAAD,EAAAE,eAAAvB,EACA,IAAAsB,EAEAA,EAAApB,UAAAA,cAEA,CAEA,GAAAsB,GAAA,GAAAzB,GAAAC,EAAAE,UAEAmB,GAAAX,WAAAe,KAAAD,MAIA3B,KAAAY,SAAAgB,KAAAzB,KAGAO,EAAAH,UAAAmB,eAAA,SAAAvB,GACA,IAAA,GAAA0B,KAAA7B,MAAAa,WAAA,CACA,GAAAY,GAAAzB,KAAAa,WAAAgB,EACA,IAAA1B,EAAAgB,OAAAM,EAAAtB,QACA,MAAAsB,GAGA,OAAA,GAEAf,EAAAH,UAAAc,WAAA,WACArB,KAAAa,WAAAiB,QAAA,SAAAL,GACAA,EAAAX,SAEAd,KAAAa,eAEAH,EAAAH,UAAAa,kBAAA,WACApB,KAAAY,SAAAkB,QAAA,SAAA3B,GACAA,EAAAe,WAEAlB,KAAAY,aAGA,mBAAAmB,SACAA,QAAArB,EAGAsB,OAAAtB,aAAAA","file":"FuryLazyCall.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  function CallMethod(object, name, fn) {\n    this.object = object;\n    this.name = name;\n    this.fn = object[name];\n  }\n  CallMethod.prototype.exec = function(args) {\n    this.fn.apply(this.object, args);\n  };\n  CallMethod.prototype.replaceWith = function(newFn) {\n    this.object[this.name] = newFn;\n  };\n  CallMethod.prototype.revert = function() {\n    this.object[this.name] = this.fn;\n  };\n  CallMethod.prototype.equals = function(method) {\n    return this.object === method.object && this.name === method.name;\n  };\n\n  function CallObject(method, args) {\n    this.method = method;\n    this.arguments = Array.prototype.slice.call(args);\n  }\n  CallObject.prototype.exec = function() {\n    this.method.exec(this.arguments);\n  };\n\n  /**\n   * [FuryLazyCall]\n   */\n  function FuryLazyCall() {\n    this._isLoaded = false;\n    this._methods = [];\n    this._callQueue = [];\n  }\n\n  /**\n   * [exec]\n   */\n  FuryLazyCall.prototype.exec = function() {\n    this._isLoaded = true;\n    this._revertAllMethods();\n    this._makeCalls();\n  };\n\n  /**\n   * [last]\n   */\n  FuryLazyCall.prototype.last = function(object, methodName) {\n    if (this._isLoaded) {\n      // do nothing\n      return;\n    }\n\n    var _this = this,\n        method = new CallMethod(object, methodName);\n\n    method.replaceWith(function() {\n      var callObject = _this._getCallObject(method);\n      if(callObject) {\n        // replace call args\n        callObject.arguments = arguments;\n      }\n      else {\n        // create new call\n        var methodCall = new CallObject(method, arguments);\n\n        _this._callQueue.push(methodCall);\n      }\n    });\n\n    this._methods.push(method);\n  };\n\n  FuryLazyCall.prototype._getCallObject = function(method) {\n    for(var i in this._callQueue) {\n      var callObject = this._callQueue[i];\n      if(method.equals(callObject.method)) {\n        return callObject;\n      }\n    }\n    return false;\n  };\n  FuryLazyCall.prototype._makeCalls = function() {\n    this._callQueue.forEach(function(callObject) {\n      callObject.exec();\n    });\n    this._callQueue = [];\n  };\n  FuryLazyCall.prototype._revertAllMethods = function() {\n    this._methods.forEach(function(method) {\n      method.revert();\n    });\n    this._methods = [];\n  };\n\n  if(typeof exports !== 'undefined') {\n    exports = FuryLazyCall;\n  }\n  else {\n    window.FuryLazyCall = FuryLazyCall;\n  }\n\n})();"],"sourceRoot":"/source/"}